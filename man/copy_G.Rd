% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy_G.R
\name{copy_G}
\alias{copy_G}
\title{Deep Copy of an ABM_G Object}
\usage{
copy_G(G)
}
\arguments{
\item{G}{An object of class \code{ABM_G}. This is the source object to be copied.}
}
\value{
A deep copy of the input \code{ABM_G} object.
}
\description{
Creates a deep copy of an \code{ABM_G} object using the internal \code{clone()} method.
This function ensures that all nested objects are also duplicated, preventing unintended side effects
from in-place modifications.
}
\details{
\code{ABM_G} is implemented as an R6 object. R6 objects are reference-based, meaning that
a simple assignment like \code{G2 <- G} does not create a true copy, but merely
a new reference to the same object. As a result, any changes to \code{G2} will affect \code{G} as well.

To avoid this "modification in place" behavior and to work safely with duplicates,
a deep copy is required. This function provides a convenient and safe way to create
such a copy using \code{G\$clone(deep = TRUE)} internally.
}
\examples{
G1 <- setABM() # assuming setABM initializes an ABM_G object
G2 <- copy_G(G1) # now G2 can be safely modified without affecting G1

}
\seealso{
\code{\link{ABM_G}}, \code{\link{modify_G}}
}
