% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_log.R
\name{get_log}
\alias{get_log}
\title{Extract and Process Log Data from ABM_G Objects}
\usage{
get_log(
  expr,
  G = NULL,
  log = NULL,
  FUN = NULL,
  ...,
  return_as = c("list", "data.frame", "vector")
)
}
\arguments{
\item{expr}{An expression that specifies the log data to extract.
Must include a \code{$} operator.}

\item{G}{An \code{ABM_G} class object. If \code{NULL}, the value is automatically obtained
from \code{expr} within the \code{parent.frame()} environment.
The default is \code{NULL}.}

\item{log}{A numeric vector specifying which logs to extract.
If \code{NULL}, all logs are extracted.}

\item{FUN}{An optional function to apply to each extracted log entry.}

\item{...}{Additional arguments passed to \code{FUN}.}

\item{return_as}{An optional character vector indicating the method to
combine the results. Choices are "list" (default), "data.frame", or "vector".}
}
\value{
A list of extracted (and optionally processed or combined) log entries.
}
\description{
This function extracts log data from objects of class \code{ABM_G} and
optionally applies a processing function or combines the results.
}
\examples{
# Prepare a simple ABM_G object
increase_x <- function() { G$x <- G$x + 1 }
G <- setABM(stage = list(x = 1), global_FUN = increase_x)
G <- runABM(G, schedule = "increase_x", times = 3, save_log = TRUE)

# Get the value of x over time
get_log(G$x)

# Get the result as a vector
get_log(G$x, return_as = "vector")

# Retrieve each log, divide by four, and return them as list
get_log(G$x, FUN = function(x) { x / 4 })

# Retrieve each log, divide by four, and return them as vector
get_log(G$x, FUN = function(x) { x / 4 }, return_as = "vector")
}
