% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_ABM_Agent.R
\name{ABM_Agent}
\alias{ABM_Agent}
\title{ABM_Agent Class}
\description{
The \code{ABM_Agent} class defines an agent used in agent-based modeling (ABM),
offering mechanisms for managing attributes, methods, and active bindings.
}
\details{
This R6-based class is intended for internal infrastructure and supports:
\itemize{
\item Adding/removing agent fields, methods, and active bindings
\item Dynamic modification and inspection of agent structure
\item Customized field replacement and renaming
}

While agents can be created via \code{ABM_Agent$new()}, users are advised to use
\code{\link{init_agents}} for batch initialization and validation.
Similarly, \code{\link{modify_agents}} provides safer field-level manipulation.

Field and method names must be unique within the agent. Duplicates will raise an error.
}
\keyword{internal}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ABM_Agent-new}{\code{ABM_Agent$new()}}
\item \href{#method-ABM_Agent-.add_field}{\code{ABM_Agent$.add_field()}}
\item \href{#method-ABM_Agent-.add_method}{\code{ABM_Agent$.add_method()}}
\item \href{#method-ABM_Agent-.add_active_binding}{\code{ABM_Agent$.add_active_binding()}}
\item \href{#method-ABM_Agent-.remove_field}{\code{ABM_Agent$.remove_field()}}
\item \href{#method-ABM_Agent-.replace_field}{\code{ABM_Agent$.replace_field()}}
\item \href{#method-ABM_Agent-.rename_field}{\code{ABM_Agent$.rename_field()}}
\item \href{#method-ABM_Agent-.field_list}{\code{ABM_Agent$.field_list()}}
\item \href{#method-ABM_Agent-print}{\code{ABM_Agent$print()}}
\item \href{#method-ABM_Agent-.save}{\code{ABM_Agent$.save()}}
\item \href{#method-ABM_Agent-clone}{\code{ABM_Agent$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-new"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new agent with specified fields and methods.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$new(fields = list(), methods = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fields}}{A named list of fields to initialize.}

\item{\code{methods}}{A named list of methods (functions) to assign.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{ABM_Agent} instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.add_field"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.add_field}{}}}
\subsection{Method \code{.add_field()}}{
Adds a new field to the agent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.add_field(name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A string indicating the name of the field.}

\item{\code{value}}{The value to assign.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.add_method"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.add_method}{}}}
\subsection{Method \code{.add_method()}}{
Adds a new method (function) to the agent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.add_method(name, method)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name to assign the method.}

\item{\code{method}}{A function object to assign.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.add_active_binding"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.add_active_binding}{}}}
\subsection{Method \code{.add_active_binding()}}{
Adds an active binding to the agent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.add_active_binding(name, FUN)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the active binding.}

\item{\code{FUN}}{A function defining the active binding behavior.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.remove_field"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.remove_field}{}}}
\subsection{Method \code{.remove_field()}}{
Removes a field (including active bindings or methods) from the agent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.remove_field(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the field to remove.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.replace_field"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.replace_field}{}}}
\subsection{Method \code{.replace_field()}}{
Replaces an existing field or method with a new value or function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.replace_field(name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the field to replace.}

\item{\code{value}}{The new value or function to assign.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.rename_field"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.rename_field}{}}}
\subsection{Method \code{.rename_field()}}{
Renames an existing field, method, or active binding.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.rename_field(name, new_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Current name of the field.}

\item{\code{new_name}}{New name to assign.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.field_list"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.field_list}{}}}
\subsection{Method \code{.field_list()}}{
Returns a data frame describing current fields, their types, and binding status.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.field_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.frame with field names, categories, types, and whether they are active bindings.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-print"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-print}{}}}
\subsection{Method \code{print()}}{
Prints a structured summary of the agent's attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method provides a detailed view of the agent's attributes,
categorizing them based on their type.
Attributes are grouped into the following categories:
\itemize{
\item ID: Agent's ID.
\item Scalar fields: Single values.
\item Vector fields: Multiple values in a vector.
\item Matrix fields: 2D data structures.
\item Array fields: Multidimensional data structures.
\item Data frame fields: Tabular data.
\item Other fields: Fields that do not fit the above types.
\item act_FUN: Actions of the agents.
Fields that are active bindings are marked with an asterisk (\code{*}) next to their names.
Active bindings are fields whose values are computed dynamically upon access.
}
}

\subsection{Returns}{
None. Output is printed to the console.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-.save"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-.save}{}}}
\subsection{Method \code{.save()}}{
Retrieve the current attributes of the agent as a list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$.save()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method returns the fields of the \code{ABM_Agent}
object in a standard list format.
It is primarily used for saving the state of an
agent at each round during a simulation.

Note: This method is intended for internal use during
simulations. Users are not expected to call this method directly.
}

\subsection{Returns}{
A named list containing the values of the agent's fields, including the \code{ID} field.
Methods including \code{act_FUN} are excluded from the output.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ABM_Agent-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ABM_Agent-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ABM_Agent$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
