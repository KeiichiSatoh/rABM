% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators-ai.R
\name{\%ai\%}
\alias{\%ai\%}
\alias{\%ai\%<-}
\title{Agent selection operations}
\usage{
agents \%ai\% idx

\%ai\%(agents, idx, deep = FALSE)

agents \%ai\% idx <- value

`\%ai\%`(agents, idx) <- value
}
\arguments{
\item{agents}{A list of ABM_Agent objects.}

\item{idx}{An integer vector of indices to extract or replace.}

\item{deep}{Logical. If TRUE, clones of the agents are returned. Only used with \verb{\%ai\%}. Default is FALSE.}

\item{value}{A list of replacement agents. Must match the length of \code{idx}.}
}
\value{
\itemize{
\item \verb{\%ai\%} returns a list of agents (shallow or deep copies).
\item \verb{\%ai\%<-} returns the modified agent list.
}
}
\description{
These operators allow you to extract or replace a subset of agents in a list,
typically used within an agent-based modeling (ABM) framework.
}
\details{
The \verb{\%ai\%} operator extracts agents by index. By default, it returns shallow references
to the agents (i.e., original objects). When \code{deep = TRUE} is specified, deep clones
of the agents are returned instead.

The \verb{\%ai\%<-} replacement operator updates the agents at the given indices.
}
\examples{
# Create and extract agents
agents <- init_agents(n = 3, attr_df = data.frame(x = 1:3))
agents \%ai\% c(1, 3)

# Use deep clone if needed
`\%ai\%`(agents, c(1, 3), deep = TRUE)

# Use within ABM_G object
G <- setABM(agents = agents)
G$agents \%ai\% c(2, 3)
G$agents \%ai\% c(2, 3) <- list(G$agents[[2]], G$agents[[3]])

}
\seealso{
\code{\link{\%aa\%}} for accessing agent attributes,
and \code{\link{\%aa\%<-}} for modifying agent attributes.
}
